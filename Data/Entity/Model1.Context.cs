//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NganHangDeThiEntities1 : DbContext
    {
        public NganHangDeThiEntities1()
            : base("name=NganHangDeThiEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Decentralization> Decentralizations { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Level> Levels { get; set; }
        public virtual DbSet<TestScore> TestScores { get; set; }
        public virtual DbSet<Cours> Courses { get; set; }
        public virtual DbSet<Guide> Guides { get; set; }
        public virtual DbSet<GuideGroup> GuideGroups { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<NewsCate> NewsCates { get; set; }
        public virtual DbSet<About> Abouts { get; set; }
    
        public virtual ObjectResult<ThongKe_Result> ThongKe(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ThongKe_Result>("ThongKe", idParameter);
        }
    
        public virtual ObjectResult<XepHang_Result> XepHang(Nullable<short> @class)
        {
            var classParameter = @class.HasValue ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<XepHang_Result>("XepHang", classParameter);
        }
    
        public virtual ObjectResult<XepHangLevel_Result> XepHangLevel(Nullable<short> @class, Nullable<short> lv)
        {
            var classParameter = @class.HasValue ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(short));
    
            var lvParameter = lv.HasValue ?
                new ObjectParameter("lv", lv) :
                new ObjectParameter("lv", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<XepHangLevel_Result>("XepHangLevel", classParameter, lvParameter);
        }
    }
}
